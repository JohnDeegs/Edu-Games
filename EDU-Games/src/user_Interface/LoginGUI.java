package user_Interface;

import UserData.UserData;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class LoginGUI extends javax.swing.JFrame {

    public UserData player = new UserData();

    public LoginGUI() {
        initComponents();
        setLocationRelativeTo(null);
        newUserPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        newUserPanel = new javax.swing.JPanel();
        submitNewUser = new javax.swing.JButton();
        nameNewUserLbl = new javax.swing.JLabel();
        passwordNewUserLbl = new javax.swing.JLabel();
        nameNewUser = new javax.swing.JTextField();
        passwordNewUser = new javax.swing.JTextField();
        backBtn = new javax.swing.JButton();
        userNameTf = new javax.swing.JTextField();
        newUserBtn = new javax.swing.JButton();
        LoginBtn = new javax.swing.JButton();
        nUserTf = new javax.swing.JTextField();
        rUserTf = new javax.swing.JTextField();
        passwordLbl = new javax.swing.JLabel();
        passwordTf = new javax.swing.JPasswordField();
        geustLoginBtn = new javax.swing.JButton();
        bkgrLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(373, 352));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setMinimumSize(new java.awt.Dimension(373, 352));
        jPanel1.setLayout(null);

        newUserPanel.setBackground(new java.awt.Color(0, 153, 255));
        newUserPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        submitNewUser.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        submitNewUser.setText("Submit");
        submitNewUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitNewUserActionPerformed(evt);
            }
        });

        nameNewUserLbl.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        nameNewUserLbl.setText("Name:");

        passwordNewUserLbl.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        passwordNewUserLbl.setText("Password:");

        backBtn.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        backBtn.setText("Back");
        backBtn.setMaximumSize(new java.awt.Dimension(65, 23));
        backBtn.setMinimumSize(new java.awt.Dimension(65, 23));
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newUserPanelLayout = new javax.swing.GroupLayout(newUserPanel);
        newUserPanel.setLayout(newUserPanelLayout);
        newUserPanelLayout.setHorizontalGroup(
            newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newUserPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(submitNewUser)
                .addGap(126, 126, 126))
            .addGroup(newUserPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameNewUserLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordNewUserLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameNewUser, javax.swing.GroupLayout.DEFAULT_SIZE, 139, Short.MAX_VALUE)
                    .addComponent(passwordNewUser))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        newUserPanelLayout.setVerticalGroup(
            newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newUserPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameNewUserLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nameNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordNewUserLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(passwordNewUser, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(newUserPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submitNewUser)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        jPanel1.add(newUserPanel);
        newUserPanel.setBounds(10, 60, 340, 155);

        userNameTf.setText("Enter User Name:");
        userNameTf.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userNameTfMouseClicked(evt);
            }
        });
        jPanel1.add(userNameTf);
        userNameTf.setBounds(20, 220, 173, 30);

        newUserBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/createnewuserbutton.png"))); // NOI18N
        newUserBtn.setBorderPainted(false);
        newUserBtn.setContentAreaFilled(false);
        newUserBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newUserBtnActionPerformed(evt);
            }
        });
        jPanel1.add(newUserBtn);
        newUserBtn.setBounds(130, 130, 120, 40);

        LoginBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/login.png"))); // NOI18N
        LoginBtn.setBorderPainted(false);
        LoginBtn.setContentAreaFilled(false);
        LoginBtn.setMaximumSize(new java.awt.Dimension(115, 23));
        LoginBtn.setMinimumSize(new java.awt.Dimension(115, 23));
        LoginBtn.setPreferredSize(new java.awt.Dimension(115, 23));
        LoginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginBtnActionPerformed(evt);
            }
        });
        jPanel1.add(LoginBtn);
        LoginBtn.setBounds(220, 210, 120, 50);

        nUserTf.setEditable(false);
        nUserTf.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        nUserTf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        nUserTf.setText("New User?");
        nUserTf.setBorder(null);
        nUserTf.setOpaque(false);
        jPanel1.add(nUserTf);
        nUserTf.setBounds(110, 100, 170, 30);

        rUserTf.setEditable(false);
        rUserTf.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        rUserTf.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        rUserTf.setText("Returning User?");
        rUserTf.setBorder(null);
        rUserTf.setOpaque(false);
        jPanel1.add(rUserTf);
        rUserTf.setBounds(110, 180, 160, 30);

        passwordLbl.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        passwordLbl.setText("Password:");
        jPanel1.add(passwordLbl);
        passwordLbl.setBounds(20, 260, 90, 14);
        jPanel1.add(passwordTf);
        passwordTf.setBounds(20, 280, 170, 30);

        geustLoginBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/guestLogin.png"))); // NOI18N
        geustLoginBtn.setBorderPainted(false);
        geustLoginBtn.setContentAreaFilled(false);
        geustLoginBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geustLoginBtnActionPerformed(evt);
            }
        });
        jPanel1.add(geustLoginBtn);
        geustLoginBtn.setBounds(220, 270, 120, 40);

        bkgrLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/edugamesCloud.png"))); // NOI18N
        jPanel1.add(bkgrLbl);
        bkgrLbl.setBounds(0, 0, 370, 350);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 370, 350);

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void submitNewUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitNewUserActionPerformed
        //submit new user information to DB
        //get user entered data
        String name = nameNewUser.getText();
        String password = passwordNewUser.getText();
        String avatar = "src/Images/guest.jpg";
        int coins = 0;

        //Do the following if the user entered fields are NOT left blanl else output error message in text areea
        if (!name.equals("") && !password.equals("")) {

            //get existing users
            ArrayList<String> userNames;
            userNames = doGetAllUsernames();

            //if the username is already taken try again, else save new user
            if (userNames.contains(name)) {
                JOptionPane.showMessageDialog(null, "That username is already taken \nPlease choose a different username");
            } else {
                //call the method that runs the insert query on DB and passes above variables in as method paramaters
                doInsert(name, password, avatar, coins);
                getPlayer(name);
                //returning to log in screen
                newUserPanel.setVisible(false);
                LoginBtn.setVisible(true);
                userNameTf.setVisible(true);
                passwordTf.setVisible(true);
                newUserBtn.setVisible(true);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Sorry, no fields can be left blank");
        } // end if

    }//GEN-LAST:event_submitNewUserActionPerformed

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        //returning to log in screen
        newUserPanel.setVisible(false);
        LoginBtn.setVisible(true);
        userNameTf.setVisible(true);
        passwordTf.setVisible(true);
        newUserBtn.setVisible(true);
    }//GEN-LAST:event_backBtnActionPerformed

    //global variable that we will use to update userdata throughout game.
    static String name;
    private void LoginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginBtnActionPerformed

        //ArrayLists that will store all the user names
        ArrayList<String> userNames;
        //calling the method which communicated with DB and populates ArrayList
        userNames = doGetAllUsernames();

        // same for passwords
        ArrayList<String> passwords;
        passwords = doGetAllPasswordss();

        //Storing user entered name and password
        name = userNameTf.getText();
        String password = passwordTf.getText();

        //if name or password are NOT left blabk procees with the check otherwise output error message in the text area
        if (!name.equals("") && !password.equals("")) {
            //loop through arraylist and only procees to next screen when the user entered password and username match DB returned one
            boolean isValid = false;
            for (int i = 0; i < passwords.size(); i++) {
                if (name.equals(userNames.get(i)) && (password.equals(passwords.get(i)))) {
                    //**setting player ID
                    getPlayer(name);
                    this.dispose();
                    myHomeGUI.setVisible(true);
                    isValid = true;
                    break;
                }

            }//end for loop
            if (!isValid) {
                JOptionPane.showMessageDialog(null, "Sorry, no user recognized with those credentials\nPlease try again");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Sorry, no fields can be left blank");
        }//end
    }//GEN-LAST:event_LoginBtnActionPerformed

    //storing the user loging from the LoginGUI this is a global variable, we will use this to run a query *****
    public void getPlayer(String Username) {
        try {

            Statement st = conn.createStatement();
            ResultSet rs1 = st.executeQuery("select * from users WHERE name = '" + Username + "';");
            if (rs1.next()) {
                player.setName(rs1.getString("name"));
                player.setUser_id(rs1.getInt("user_id"));
                player.setAvatar(rs1.getString("avatar"));
                player.setCoins(rs1.getInt("coins"));

                myHomeGUI = new HomeGUI(player);
            } else {
                System.out.println("error");
            }
        } catch (SQLException ex) {
            Logger.getLogger(LoginGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void newUserBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newUserBtnActionPerformed
        //open panel to add new user
        newUserPanel.setVisible(true);
        LoginBtn.setVisible(false);
        userNameTf.setVisible(false);
        passwordTf.setVisible(false);
        newUserBtn.setVisible(false);
    }//GEN-LAST:event_newUserBtnActionPerformed

    private void userNameTfMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userNameTfMouseClicked
        //set textfield black when clicked
        userNameTf.setText("");
    }//GEN-LAST:event_userNameTfMouseClicked

    private void geustLoginBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geustLoginBtnActionPerformed
        name = "Guest";
        doInsert(name, null, null, 0);
        getPlayer(name);
        myHomeGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_geustLoginBtnActionPerformed

    //Variables storing superuser name and password returned from DB
    private String adminNameFromDB;
    private String adminPasswordFromDb;

    //creating a new instance of HomeGUI, we will be making this visable if the correct username and password is entered.
    HomeGUI myHomeGUI;

    //Database Connection variables
    private Connection conn;

    public void setConn(Connection conn) {
        this.conn = conn;
    }

    public void closeConn() {
        try {
            this.conn.close();
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }

    //getting admin login which is hard coded to first positin in users table of the DB
    public void doGetAdminUserNameAndPassword() {
        //Querys we will be executing to get name and password from position 1 in users table
        String queryName = "SELECT name FROM users WHERE user_id = 1";
        String queryPassword = "SELECT pass_word FROM users WHERE user_id = 1";

        try {
            //create a new statement object, this is needed to execute the SQL query
            Statement st = conn.createStatement();
            //run the query and store the results in a variable of type resultset (this is a list data type)
            ResultSet rs1 = st.executeQuery(queryName);
            //we cycle through the list to get the desired field in this case position 1
            while (rs1.next()) {
                adminNameFromDB = rs1.getString(1);
            }
            ResultSet rs2 = st.executeQuery(queryPassword);
            while (rs2.next()) {
                adminPasswordFromDb = rs2.getString(1);
            }
        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
    }

    //Method for inserting a new user into DB
    public void doInsert(String name, String password, String avatar, int coins) {
        try {
            //creating new statment obj
            Statement st = conn.createStatement();
            st.executeUpdate("INSERT INTO users (name, pass_word, avatar, coins) VALUES ('" + name + "' , '" + password + "' , '" + avatar + "' , '" + coins + "')");
            //if its not a geust login display welcome message with name
            if (!"Guest".equals(name)) {
                JOptionPane.showMessageDialog(null, "user profile: " + name + " created\nThank you for signing up ");
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "error 1 " + ex.getMessage());
        }

    }// end method insert

    //**put particular colum result set into a array list**
    //method returns an array list of type String
    public ArrayList<String> doGetAllUsernames() {
        //querys to be run
        String nameQuery = "SELECT name FROM users ";
        // where returned values will be stored
        ArrayList<String> nameValues = null;
        try {
            Statement st = conn.createStatement();
            ResultSet rs1 = st.executeQuery(nameQuery);

            //we will store all the values the query returns here
            nameValues = new ArrayList();
            //while loop will run through the result set of name query and add the results set to the Array List starting at 1st recod.
            while (rs1.next()) {
                nameValues.add(rs1.getString(1));
            }

        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
        return nameValues;
    }

    //returnign all passwords stored in DB to an arrayList
    public ArrayList<String> doGetAllPasswordss() {
        //querys to be run
        String PasswordQuery = "SELECT pass_word FROM users";
        // where returned values will be stored
        ArrayList<String> passwordValues = null;
        try {
            Statement st = conn.createStatement();
            //we will store all the values the query returns here
            passwordValues = new ArrayList();

            //execute password query, store in result set 2, then loop through and store in arraylist
            ResultSet rs2 = st.executeQuery(PasswordQuery);
            while (rs2.next()) {
                passwordValues.add(rs2.getString(1));
            }

        } catch (SQLException ex) {
            System.err.println(ex.getMessage());
        }
        return passwordValues;
    }

    //method to create the table if it doesnt allready exist
    public void doCreateTable() throws SQLException {
        String query = "CREATE TABLE users(user_id INTEGER PRIMARY KEY NOT NULL AUTO_INCREMENT, name VARCHAR(80), pass_word VARCHAR(50), login_time timestamp, conter integer  );";

        Statement st = conn.createStatement();

        st.execute(query);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton LoginBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JLabel bkgrLbl;
    private javax.swing.JButton geustLoginBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField nUserTf;
    private javax.swing.JTextField nameNewUser;
    private javax.swing.JLabel nameNewUserLbl;
    private javax.swing.JButton newUserBtn;
    private javax.swing.JPanel newUserPanel;
    private javax.swing.JLabel passwordLbl;
    private javax.swing.JTextField passwordNewUser;
    private javax.swing.JLabel passwordNewUserLbl;
    private javax.swing.JPasswordField passwordTf;
    private javax.swing.JTextField rUserTf;
    private javax.swing.JButton submitNewUser;
    private javax.swing.JTextField userNameTf;
    // End of variables declaration//GEN-END:variables
}