package Games;

import UserData.UserData;
import java.io.FileInputStream;
import java.io.InputStream;
import user_Interface.FirstAndSecondGameSelection;
import user_Interface.HomeGUI;
import user_Interface.Leaderboard;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import sun.audio.AudioPlayer;
import sun.audio.AudioStream;
import user_Interface.RateGUI;

public class GeographyGameGUI extends javax.swing.JFrame {

    public UserData myUser = new UserData();

    private GeographyGameGUI() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void setUserData(UserData player) {
        this.myUser = player;
    }

    /**
     * Creates new form GeographyGameGUI
     */
    //questions & answers
    private String Questions;
    private String[] Answer1;
    private String[] Answer2;
    private String[] Answer3;
    private String[] Answer4;
    private String[] Correct;
    private String response;
    private String imageList[];
    ImageIcon image;

    // set the count and score
    int count = 0;
    int score = 0;

    //DB conncetion
    Connection conn;
    String url = "jdbc:mysql://sql3.freemysqlhosting.net/";
    String db = "sql368113";
    String driver = "com.mysql.jdbc.Driver";
    String user = "sql368113";
    String pass = "qG9*eZ8*";

    public GeographyGameGUI(UserData player) {
        initComponents();
        setLocationRelativeTo(null);

        this.myUser = player;

        Questions = new String();
        Answer1 = new String[6];
        Answer2 = new String[6];
        Answer3 = new String[6];
        Answer4 = new String[6];
        Correct = new String[6];

        imageList = new String[]{"src\\Images\\Tour_Eiffel_Wikimedia_Commons.jpg", "src\\Images\\Ben.jpg", "src\\Images\\Rio.jpg", "src\\Images\\Liberty.jpg", "src\\Images\\Pyramid.jpg", "src\\Images\\China.jpg"};

        image = new ImageIcon(imageList[0]);
        imageLbl.setIcon(image);

        try {
            // connect to db here stated above
            conn = DriverManager.getConnection(url + db, user, pass);
        } catch (SQLException e) {
            System.out.println("SQL Exception:" + e.toString());
        }
    }

    public void setAnswers(String Questions, String Answer1[], String Answer2[], String Answer3[], String Answer4[], String Correct[]) {
        this.Questions = Questions;
        this.Answer1 = Answer1;
        this.Answer2 = Answer2;
        this.Answer3 = Answer3;
        this.Answer4 = Answer4;
        this.Correct = Correct;

        //start question in array posistion 0
        questionsLbl.setText(Questions);
        answer1Rtbn.setText(Answer1[0]);
        answer2Rtbn.setText(Answer2[0]);
        answer3Rtbn.setText(Answer3[0]);
        answer4Rtbn.setText(Answer4[0]);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        questionsLbl = new javax.swing.JLabel();
        answer1Rtbn = new javax.swing.JRadioButton();
        answer2Rtbn = new javax.swing.JRadioButton();
        answer3Rtbn = new javax.swing.JRadioButton();
        answer4Rtbn = new javax.swing.JRadioButton();
        nextBtn = new javax.swing.JButton();
        imageLbl = new javax.swing.JLabel();
        leaderBtn = new javax.swing.JButton();
        homeLbl = new javax.swing.JButton();
        backBtn9 = new javax.swing.JButton();
        infoBtn = new javax.swing.JButton();
        ProgressBar = new javax.swing.JProgressBar();
        progresslbl = new javax.swing.JLabel();
        rateBtn14 = new javax.swing.JButton();
        InfoSoundBtn = new javax.swing.JButton();
        backgroundLbl = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(900, 600));
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setMaximumSize(new java.awt.Dimension(900, 600));
        jPanel1.setLayout(null);

        questionsLbl.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        questionsLbl.setForeground(new java.awt.Color(240, 240, 240));
        questionsLbl.setText("Questions");
        jPanel1.add(questionsLbl);
        questionsLbl.setBounds(10, 159, 532, 92);

        answer1Rtbn.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(answer1Rtbn);
        answer1Rtbn.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        answer1Rtbn.setText("jRadioButton1");
        answer1Rtbn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        answer1Rtbn.setBorderPainted(true);
        jPanel1.add(answer1Rtbn);
        answer1Rtbn.setBounds(50, 350, 100, 30);

        buttonGroup1.add(answer2Rtbn);
        answer2Rtbn.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        answer2Rtbn.setText("jRadioButton2");
        answer2Rtbn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        answer2Rtbn.setBorderPainted(true);
        jPanel1.add(answer2Rtbn);
        answer2Rtbn.setBounds(50, 420, 100, 30);

        answer3Rtbn.setBackground(new java.awt.Color(255, 255, 255));
        buttonGroup1.add(answer3Rtbn);
        answer3Rtbn.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        answer3Rtbn.setText("jRadioButton3");
        answer3Rtbn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        answer3Rtbn.setBorderPainted(true);
        jPanel1.add(answer3Rtbn);
        answer3Rtbn.setBounds(250, 350, 100, 30);

        buttonGroup1.add(answer4Rtbn);
        answer4Rtbn.setFont(new java.awt.Font("Trebuchet MS", 0, 11)); // NOI18N
        answer4Rtbn.setText("jRadioButton4");
        answer4Rtbn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        answer4Rtbn.setBorderPainted(true);
        jPanel1.add(answer4Rtbn);
        answer4Rtbn.setBounds(250, 420, 100, 30);

        nextBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/nextBtn.png"))); // NOI18N
        nextBtn.setBorderPainted(false);
        nextBtn.setContentAreaFilled(false);
        nextBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextBtnActionPerformed(evt);
            }
        });
        jPanel1.add(nextBtn);
        nextBtn.setBounds(110, 470, 200, 90);

        imageLbl.setMaximumSize(new java.awt.Dimension(200, 200));
        imageLbl.setMinimumSize(new java.awt.Dimension(200, 200));
        imageLbl.setPreferredSize(new java.awt.Dimension(200, 200));
        jPanel1.add(imageLbl);
        imageLbl.setBounds(410, 70, 480, 330);

        leaderBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/leaderb.png"))); // NOI18N
        leaderBtn.setBorderPainted(false);
        leaderBtn.setContentAreaFilled(false);
        leaderBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaderBtnActionPerformed(evt);
            }
        });
        jPanel1.add(leaderBtn);
        leaderBtn.setBounds(560, 520, 120, 40);

        homeLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/homeBtn.png"))); // NOI18N
        homeLbl.setBorderPainted(false);
        homeLbl.setContentAreaFilled(false);
        homeLbl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeLblActionPerformed(evt);
            }
        });
        jPanel1.add(homeLbl);
        homeLbl.setBounds(20, 0, 90, 40);

        backBtn9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/backBtn.png"))); // NOI18N
        backBtn9.setBorderPainted(false);
        backBtn9.setContentAreaFilled(false);
        backBtn9.setMaximumSize(new java.awt.Dimension(85, 32));
        backBtn9.setMinimumSize(new java.awt.Dimension(85, 32));
        backBtn9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtn9ActionPerformed(evt);
            }
        });
        jPanel1.add(backBtn9);
        backBtn9.setBounds(110, 0, 90, 40);

        infoBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/infoBtn.png"))); // NOI18N
        infoBtn.setBorderPainted(false);
        infoBtn.setContentAreaFilled(false);
        infoBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoBtnActionPerformed(evt);
            }
        });
        jPanel1.add(infoBtn);
        infoBtn.setBounds(770, 520, 90, 40);

        ProgressBar.setBackground(new java.awt.Color(255, 0, 0));
        ProgressBar.setForeground(new java.awt.Color(51, 255, 51));
        jPanel1.add(ProgressBar);
        ProgressBar.setBounds(450, 450, 146, 14);

        progresslbl.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        progresslbl.setForeground(new java.awt.Color(240, 240, 240));
        progresslbl.setText("Progress");
        jPanel1.add(progresslbl);
        progresslbl.setBounds(480, 420, 110, 22);

        rateBtn14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/rateb.png"))); // NOI18N
        rateBtn14.setBorderPainted(false);
        rateBtn14.setContentAreaFilled(false);
        rateBtn14.setMaximumSize(new java.awt.Dimension(53, 23));
        rateBtn14.setMinimumSize(new java.awt.Dimension(53, 23));
        rateBtn14.setPreferredSize(new java.awt.Dimension(53, 23));
        rateBtn14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rateBtn14ActionPerformed(evt);
            }
        });
        jPanel1.add(rateBtn14);
        rateBtn14.setBounds(380, 520, 90, 40);

        InfoSoundBtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/microphone.png"))); // NOI18N
        InfoSoundBtn.setMaximumSize(new java.awt.Dimension(50, 50));
        InfoSoundBtn.setMinimumSize(new java.awt.Dimension(50, 50));
        InfoSoundBtn.setPreferredSize(new java.awt.Dimension(50, 50));
        InfoSoundBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InfoSoundBtnActionPerformed(evt);
            }
        });
        jPanel1.add(InfoSoundBtn);
        InfoSoundBtn.setBounds(700, 420, 50, 50);

        backgroundLbl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/geogGame.png"))); // NOI18N
        jPanel1.add(backgroundLbl);
        backgroundLbl.setBounds(0, 0, 900, 600);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 900, 600);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    int imgCount = 1;

    private void nextBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextBtnActionPerformed
        //go through buttons find what is selected
        for (Enumeration<AbstractButton> buttons = buttonGroup1.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                response = button.getText();
                if (Correct[count].equals(response)) {
                    score++;
                }
                ProgressBar.setValue(ProgressBar.getValue() + 17);
                count++;
            } //end if
        } //end for

        // set end of game
        if (count == 6) {
            JOptionPane.showMessageDialog(null, "game over \n your score is: " + score + " out of 6");
            updateScore(score);
            endGame();

        } else {

            //run through the questions and set images..
            questionsLbl.setText(Questions);
            answer1Rtbn.setText(Answer1[count]);
            answer2Rtbn.setText(Answer2[count]);
            answer3Rtbn.setText(Answer3[count]);
            answer4Rtbn.setText(Answer4[count]);
            image = new ImageIcon(imageList[count]);
            imageLbl.setIcon(image);
        }
    }//GEN-LAST:event_nextBtnActionPerformed

    // db stuff
    DBManager connectionManager = new DBManager();
    //storing users unique name and id , these will correspond to values in the DB, stored in userDAta class
    String uName = myUser.getName();
    int uID;

    //method will connect to database and update score so it can be reflected in leaderboard class
    public void updateScore(int score) {
        uID = myUser.getUser_id();
        connectionManager.setConnection(conn);
        //select all fields from game scroe for only the currently logged in player and the game they are playing
        //and store results in resultset
        ResultSet rs = connectionManager.Select_Query("select * from gameScore where user_id = " + uID + " AND GameID = 4;");
        ResultSet getCoins = connectionManager.Select_Query("select * from users where user_id = " + uID);

        try { //used to add coins if player gets 100%
            if (getCoins.next()) {
                int oldCoins = getCoins.getInt("coins");
                if (score == 6) {

                    int newCoins = oldCoins + 10;
                    connectionManager.Update_Query("UPDATE users SET coins = " + newCoins + " WHERE user_id = " + uID + ";");
                }
            }
            if (rs.next()) {
                //get the previous score on this game for this specific user
                int oldScore = rs.getInt("Score");
                //if oldscore is less than new score thenn we update DB to the new score
                if (oldScore < score) {
                    connectionManager.Update_Query("UPDATE gameScore SET score = " + score + " WHERE GameID = 4 AND user_id = " + uID + ";");
                } //possibly change this output??
                else {
                    JOptionPane.showMessageDialog(null, "Not bad, but not as good as your high score of " + oldScore);
                }
            } else {
                //else if this particular user has not played this game before we insert new data 
                connectionManager.Update_Query("insert into gameScore values(" + 4 + ","
                        + "" + "'Geography Game'" + "," + uID + "," + score + ");");
            }
        } catch (SQLException ex) {
            Logger.getLogger(GeographyGameGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void homeLblActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeLblActionPerformed
        HomeGUI myHome = new HomeGUI(myUser);
        myHome.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_homeLblActionPerformed

    private void backBtn9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtn9ActionPerformed
        FirstAndSecondGameSelection mySecectionGUI = new FirstAndSecondGameSelection(myUser);
        mySecectionGUI.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtn9ActionPerformed

    private void leaderBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaderBtnActionPerformed
        Leaderboard geoLeader = new Leaderboard(4);
        geoLeader.setVisible(true);
    }//GEN-LAST:event_leaderBtnActionPerformed

    private void infoBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoBtnActionPerformed
        JOptionPane.showMessageDialog(null, "Match the landmark with the country\nHow many have you seen in real life??", "Hint!!", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_infoBtnActionPerformed

    private void rateBtn14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rateBtn14ActionPerformed
        RateGUI myRateGUI = new RateGUI();
        myRateGUI.setVisible(true);
    }//GEN-LAST:event_rateBtn14ActionPerformed

    private void InfoSoundBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InfoSoundBtnActionPerformed
        try {
            // open the sound file as a Java input stream

            String audioFilePath = "src\\InfoSounds\\geographyGame.wav";
            InputStream in = new FileInputStream(audioFilePath);

            // create an audiostream from the inputstream
            AudioStream audioStream = new AudioStream(in);

            // play the audio clip with the audioplayer class
            AudioPlayer.player.start(audioStream);
        } catch (Exception e) {
            //Error Handeling
            System.out.println("Audio error: " + e);
        }
    }//GEN-LAST:event_InfoSoundBtnActionPerformed

    public void endGame() {
        FirstAndSecondGameSelection mySecectionGUI = new FirstAndSecondGameSelection(myUser);
        mySecectionGUI.setVisible(true);
        this.dispose();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeographyGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeographyGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeographyGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeographyGameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeographyGameGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton InfoSoundBtn;
    private javax.swing.JProgressBar ProgressBar;
    private javax.swing.JRadioButton answer1Rtbn;
    private javax.swing.JRadioButton answer2Rtbn;
    private javax.swing.JRadioButton answer3Rtbn;
    private javax.swing.JRadioButton answer4Rtbn;
    private javax.swing.JButton backBtn9;
    private javax.swing.JLabel backgroundLbl;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton homeLbl;
    private javax.swing.JLabel imageLbl;
    private javax.swing.JButton infoBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton leaderBtn;
    private javax.swing.JButton nextBtn;
    private javax.swing.JLabel progresslbl;
    private javax.swing.JLabel questionsLbl;
    private javax.swing.JButton rateBtn14;
    // End of variables declaration//GEN-END:variables
}
